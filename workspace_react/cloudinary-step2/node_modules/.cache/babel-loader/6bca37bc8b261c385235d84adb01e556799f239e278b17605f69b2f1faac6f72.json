{"ast":null,"code":"import { getAuth, GithubAuthProvider,\n//깃헙으로 로그인할때\nGoogleAuthProvider /* 구글에서 제공하는 제공자 정보 */, signInWithPopup /* 구글 로그인 이중 화면 띄움 */ } from \"firebase/auth\";\nclass authLogic1212 {\n  // 클래스 선언\n  // 생성자 함수 - 전역 변수 초기화\n  constructor() {\n    // 사용자 정의 함수 구현\n    this.getUserAuth = () => {\n      return this.auth;\n    };\n    this.getGoogleAuthProvider = () => {\n      return this.googleProvider;\n    };\n    // 바닐라 스크립트에서 같은 이름의 함수를 지원하지 않는다.\n    this.auth = getAuth();\n    this.gitProvider = new GithubAuthProvider();\n    this.googleProvider = new GoogleAuthProvider();\n  }\n}\nexport default authLogic1212; // 외부 js에서 사용할 때 반드시 추가할 것\n\nexport const loginGoogle = (auth, googleProvider) => {\n  console.log(\"logoinGoogle 호출 성공\");\n  // console.log(googleAuthProvider);\n\n  return new Promise((resolve, reject) => {\n    signInWithPopup(auth, googleProvider) // 인증이 되는 동안 지연이 발생할 수 있다.\n    .then(result => {\n      // 내가 구글 회원이라면 프로필 정보를 쥐고 있다.\n      console.log(result); // object Object 출력 - 값이 안 보인다.\n      console.log(JSON.stringify(result));\n      const user = result.user; // 여기서 사용되는 user레이블은 구글에서 인증 후에 콜백으로 반환하는 값들 (Object)\n      console.log(user.uid);\n      localStorage.setItem(\"uid\", user.uid);\n      resolve(user); // {uid:xxxxxxxxx, displayName: xxxxx, email: xxxxx}\n    }).catch(error => reject(error));\n    // 로그아웃 처리하기\n  });\n}; //// end of logoinGoogle\n\n// 로그인 풀렸을 때 처리 또는 로그인 세션시간이 만료되었을때\nexport const onAuthChange = auth => {\n  return new Promise(resolve => {\n    auth.onAuthStateChanged(user => {\n      resolve(user);\n    }); //// end of onAuthStateChanged - 로그인 상태가 풀렸는지 체크 -> 콜백 함수에 파라미터로 사용자 정보를 줘어준다.\n  }); //// end of Promise\n}; //// end of onAuthChange","map":{"version":3,"names":["getAuth","GithubAuthProvider","GoogleAuthProvider","signInWithPopup","authLogic1212","constructor","getUserAuth","auth","getGoogleAuthProvider","googleProvider","gitProvider","loginGoogle","console","log","Promise","resolve","reject","then","result","JSON","stringify","user","uid","localStorage","setItem","catch","error","onAuthChange","onAuthStateChanged"],"sources":["D:/Java/workspace_react/cloudinary-step2/src/service1212/authLogic1212.js"],"sourcesContent":["import {\r\n  getAuth,\r\n  GithubAuthProvider, //깃헙으로 로그인할때\r\n  GoogleAuthProvider /* 구글에서 제공하는 제공자 정보 */,\r\n  signInWithPopup /* 구글 로그인 이중 화면 띄움 */,\r\n} from \"firebase/auth\";\r\n\r\nclass authLogic1212 {\r\n  // 클래스 선언\r\n  // 생성자 함수 - 전역 변수 초기화\r\n  constructor() {\r\n    // 바닐라 스크립트에서 같은 이름의 함수를 지원하지 않는다.\r\n    this.auth = getAuth();\r\n    this.gitProvider = new GithubAuthProvider();\r\n    this.googleProvider = new GoogleAuthProvider();\r\n  }\r\n  // 사용자 정의 함수 구현\r\n  getUserAuth = () => {\r\n    return this.auth;\r\n  };\r\n\r\n  getGoogleAuthProvider = () => {\r\n    return this.googleProvider;\r\n  };\r\n}\r\nexport default authLogic1212; // 외부 js에서 사용할 때 반드시 추가할 것\r\n\r\nexport const loginGoogle = (auth, googleProvider) => {\r\n  console.log(\"logoinGoogle 호출 성공\");\r\n  // console.log(googleAuthProvider);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    signInWithPopup(auth, googleProvider) // 인증이 되는 동안 지연이 발생할 수 있다.\r\n      .then((result) => {\r\n        // 내가 구글 회원이라면 프로필 정보를 쥐고 있다.\r\n        console.log(result); // object Object 출력 - 값이 안 보인다.\r\n        console.log(JSON.stringify(result));\r\n        const user = result.user; // 여기서 사용되는 user레이블은 구글에서 인증 후에 콜백으로 반환하는 값들 (Object)\r\n        console.log(user.uid);\r\n        localStorage.setItem(\"uid\", user.uid);\r\n        resolve(user); // {uid:xxxxxxxxx, displayName: xxxxx, email: xxxxx}\r\n      })\r\n      .catch((error) => reject(error));\r\n    // 로그아웃 처리하기\r\n  });\r\n}; //// end of logoinGoogle\r\n\r\n// 로그인 풀렸을 때 처리 또는 로그인 세션시간이 만료되었을때\r\nexport const onAuthChange = (auth) => {\r\n  return new Promise((resolve) => {\r\n    auth.onAuthStateChanged((user) => {\r\n      resolve(user);\r\n    }); //// end of onAuthStateChanged - 로그인 상태가 풀렸는지 체크 -> 콜백 함수에 파라미터로 사용자 정보를 줘어준다.\r\n  }); //// end of Promise\r\n}; //// end of onAuthChange\r\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,kBAAkB;AAAE;AACpBC,kBAAkB,CAAC,wBACnBC,eAAe,CAAC,6BACX,eAAe;AAEtB,MAAMC,aAAa,CAAC;EAClB;EACA;EACAC,WAAWA,CAAA,EAAG;IAMd;IAAA,KACAC,WAAW,GAAG,MAAM;MAClB,OAAO,IAAI,CAACC,IAAI;IAClB,CAAC;IAAA,KAEDC,qBAAqB,GAAG,MAAM;MAC5B,OAAO,IAAI,CAACC,cAAc;IAC5B,CAAC;IAZC;IACA,IAAI,CAACF,IAAI,GAAGP,OAAO,CAAC,CAAC;IACrB,IAAI,CAACU,WAAW,GAAG,IAAIT,kBAAkB,CAAC,CAAC;IAC3C,IAAI,CAACQ,cAAc,GAAG,IAAIP,kBAAkB,CAAC,CAAC;EAChD;AASF;AACA,eAAeE,aAAa,CAAC,CAAC;;AAE9B,OAAO,MAAMO,WAAW,GAAGA,CAACJ,IAAI,EAAEE,cAAc,KAAK;EACnDG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjC;;EAEA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCb,eAAe,CAACI,IAAI,EAAEE,cAAc,CAAC,CAAC;IAAA,CACnCQ,IAAI,CAAEC,MAAM,IAAK;MAChB;MACAN,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC,CAAC,CAAC;MACrBN,OAAO,CAACC,GAAG,CAACM,IAAI,CAACC,SAAS,CAACF,MAAM,CAAC,CAAC;MACnC,MAAMG,IAAI,GAAGH,MAAM,CAACG,IAAI,CAAC,CAAC;MAC1BT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,GAAG,CAAC;MACrBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrCP,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKV,MAAM,CAACU,KAAK,CAAC,CAAC;IAClC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;;AAEH;AACA,OAAO,MAAMC,YAAY,GAAIpB,IAAI,IAAK;EACpC,OAAO,IAAIO,OAAO,CAAEC,OAAO,IAAK;IAC9BR,IAAI,CAACqB,kBAAkB,CAAEP,IAAI,IAAK;MAChCN,OAAO,CAACM,IAAI,CAAC;IACf,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}