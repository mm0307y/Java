{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java\\\\workspace_react\\\\cloudinary-step2\\\\src\\\\components1210\\\\page1210\\\\LoginForm1211.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header1211 from '../include1211/Header1211';\nimport Footer1211 from '../include1211/Footer1211';\nimport './login1211.css';\nimport { useNavigate } from 'react-router';\nimport { loginGoogle } from '../../service1212/authLogic1212';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm1211 = ({\n  authLogic\n}) => {\n  _s();\n  // 로그인이 성공하면 localhost:3000/marker -> Route\n  // 리액트는 SPA다. (Single Page Application) 그래서 href를 쓰면 안된다. 사용하게 되면 URL이 변경된다. 사용할 거면 useNaigate()를 사용한다.\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState();\n  // 로그인 성공시 구글이 나에게 콜백함수 resolve를 통해서 user 정보를 쥐어준다. user.uid\n\n  const goToMaker = userId => {\n    navigate({\n      pathname: \"/maker\",\n      state: {\n        id: userId\n      }\n    });\n  };\n  const onLogin = async () => {\n    // authLogic에 있는 로그인 함수를 호출한다.\n    try {\n      const user = await loginGoogle(au);\n      // 구글 인증 후 응답으로 받은 프로필 정보에서 user값을 꺼낸다.\n      setUserId(user.uid);\n    } catch (error) {\n      console.log(\"로그인 오류입니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(Header1211, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnLogin\",\n            onClick: onLogin,\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnLogin\",\n            children: \"Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer1211, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm1211, \"fV9Uhk5iATXubRNZYUhbLtCmSOk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm1211;\nexport default LoginForm1211;\nvar _c;\n$RefreshReg$(_c, \"LoginForm1211\");","map":{"version":3,"names":["React","useState","Header1211","Footer1211","useNavigate","loginGoogle","jsxDEV","_jsxDEV","LoginForm1211","authLogic","_s","navigate","userId","setUserId","goToMaker","pathname","state","id","onLogin","user","au","uid","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Java/workspace_react/cloudinary-step2/src/components1210/page1210/LoginForm1211.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Header1211 from '../include1211/Header1211'\r\nimport Footer1211 from '../include1211/Footer1211'\r\nimport './login1211.css'\r\nimport { useNavigate } from 'react-router'\r\nimport { loginGoogle } from '../../service1212/authLogic1212'\r\n\r\nconst LoginForm1211 = ({authLogic}) => {\r\n  // 로그인이 성공하면 localhost:3000/marker -> Route\r\n  // 리액트는 SPA다. (Single Page Application) 그래서 href를 쓰면 안된다. 사용하게 되면 URL이 변경된다. 사용할 거면 useNaigate()를 사용한다.\r\n  const navigate = useNavigate()\r\n\r\n  const [userId, setUserId] = useState()\r\n  // 로그인 성공시 구글이 나에게 콜백함수 resolve를 통해서 user 정보를 쥐어준다. user.uid\r\n\r\n  const goToMaker = userId=>{\r\n    navigate({\r\n      pathname:\"/maker\",\r\n      state:{id:userId},\r\n    })\r\n  }\r\n\r\n  const onLogin = async() =>{\r\n    // authLogic에 있는 로그인 함수를 호출한다.\r\n    try{\r\n      const user = await loginGoogle(au)\r\n      // 구글 인증 후 응답으로 받은 프로필 정보에서 user값을 꺼낸다.\r\n      setUserId(user.uid)\r\n    }\r\n    catch(error){\r\n      console.log(\"로그인 오류입니다.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n      <Header1211 />\r\n      <section>\r\n        <h1>Login</h1>\r\n        <ul>\r\n          <li>\r\n            <button className='btnLogin' onClick={onLogin}>Google</button>\r\n          </li>\r\n          <li>\r\n            <button className='btnLogin'>Github</button>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <Footer1211 />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm1211"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,QAAQ,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,aAAa,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC;EACA;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACtC;;EAEA,MAAMa,SAAS,GAAGF,MAAM,IAAE;IACxBD,QAAQ,CAAC;MACPI,QAAQ,EAAC,QAAQ;MACjBC,KAAK,EAAC;QAACC,EAAE,EAACL;MAAM;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAU;IACxB;IACA,IAAG;MACD,MAAMC,IAAI,GAAG,MAAMd,WAAW,CAACe,EAAE,CAAC;MAClC;MACAP,SAAS,CAACM,IAAI,CAACE,GAAG,CAAC;IACrB,CAAC,CACD,OAAMC,KAAK,EAAC;MACVC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBnB,OAAA,CAACL,UAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdvB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,eACEnB,OAAA;YAAQkB,SAAS,EAAC,UAAU;YAACM,OAAO,EAAEb,OAAQ;YAAAQ,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACLvB,OAAA;UAAAmB,QAAA,eACEnB,OAAA;YAAQkB,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACVvB,OAAA,CAACJ,UAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAApB,EAAA,CA5CKF,aAAa;EAAA,QAGAJ,WAAW;AAAA;AAAA4B,EAAA,GAHxBxB,aAAa;AA8CnB,eAAeA,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}