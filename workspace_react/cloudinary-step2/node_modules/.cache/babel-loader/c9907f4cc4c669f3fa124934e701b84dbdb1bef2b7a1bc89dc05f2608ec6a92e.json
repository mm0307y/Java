{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java\\\\workspace_react\\\\cloudinary-step2\\\\src\\\\components1210\\\\page1210\\\\LoginForm1211.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header1211 from '../include1211/Header1211';\nimport Footer1211 from '../include1211/Footer1211';\nimport styled from 'styled-components';\nimport { loginGoogle, onAuthChange } from '../../service1212/authLogic1212';\nimport { useNavigate } from 'react-router';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginDiv = styled.div`\n    width: 30em;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color: transparent;    \n`;\n_c = LoginDiv;\nconst Section = styled.div`\n    background-color: white;    \n`;\n_c2 = Section;\nconst ListUl = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    list-style: none;\n    padding: 0.5rem; \n`;\nconst ItemLi = styled.li`\n    margin-bottom: 0.5em;\n`;\nconst BtnLogin = styled.button`\n    width: 80%;\n    height: 2.5em;\n    font-size: 1.2rem;\n    border-radius: 1.2rem;\n    background-color: transparent;\n    cursor: pointer;\n    border: 0.2rem solid lightgray;\n    outline: 0;\n    &:hover{\n      background-color: #e8e7e6;//#FEFCF3 , #F5EBE0\n    }\n`;\nconst LoginForm1211 = ({\n  authLogic\n}) => {\n  _s();\n  // 로그인이 성공하면 localhost:3000/marker -> Route\n  // 리액트는 SPA다. (Single Page Application) 그래서 href를 쓰면 안된다. 사용하게 되면 URL이 변경된다. 사용할 거면 useNaigate()를 사용한다.\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState();\n  // 로그인 성공시 구글이 나에게 콜백함수 resolve를 통해서 user 정보를 쥐어준다. user.uid\n\n  const goToMaker = userId => {\n    navigate({\n      pathname: \"/marker\",\n      state: {\n        id: userId\n      }\n    });\n  };\n  const onLogin = async () => {\n    // authLogic에 있는 로그인 함수를 호출한다.\n    try {\n      const user = await loginGoogle(authLogic.auth, authLogic.googleProvider);\n      // 구글 인증 후 응답으로 받은 프로필 정보에서 user값을 꺼낸다.\n      // localStorage.setItem(\"userID\", user.uid)\n      setUserId(user.uid);\n      //window.localStorage.setItem(\"userId\", user.uid);\n\n      // user.uid가 존재하면(참이면 1, 안녕, 즉 내용이 있으면) - Marker불러줘\n      if (user.uid) {\n        goToMaker(user.uid);\n      }\n    } catch (error) {\n      console.log(\"로그인 오류입니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Header1211, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnLogin\",\n            onClick: onLogin,\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnLogin\",\n            children: \"Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer1211, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm1211, \"fV9Uhk5iATXubRNZYUhbLtCmSOk=\", false, function () {\n  return [useNavigate];\n});\n_c3 = LoginForm1211;\nexport default LoginForm1211;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginDiv\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"LoginForm1211\");","map":{"version":3,"names":["React","useState","Header1211","Footer1211","styled","loginGoogle","onAuthChange","useNavigate","useEffect","jsxDEV","_jsxDEV","LoginDiv","div","_c","Section","_c2","ListUl","ul","ItemLi","li","BtnLogin","button","LoginForm1211","authLogic","_s","navigate","userId","setUserId","goToMaker","pathname","state","id","onLogin","user","auth","googleProvider","uid","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c3","$RefreshReg$"],"sources":["D:/Java/workspace_react/cloudinary-step2/src/components1210/page1210/LoginForm1211.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Header1211 from '../include1211/Header1211'\r\nimport Footer1211 from '../include1211/Footer1211'\r\nimport styled from 'styled-components';\r\nimport { loginGoogle, onAuthChange } from '../../service1212/authLogic1212'\r\nimport { useNavigate } from 'react-router'\r\nimport { useEffect } from 'react';\r\n\r\nconst LoginDiv = styled.div`\r\n    width: 30em;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: transparent;    \r\n`\r\n\r\nconst Section = styled.div`\r\n    background-color: white;    \r\n`\r\n\r\nconst ListUl = styled.ul`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    list-style: none;\r\n    padding: 0.5rem; \r\n`\r\n\r\nconst ItemLi = styled.li`\r\n    margin-bottom: 0.5em;\r\n`\r\n\r\nconst BtnLogin = styled.button`\r\n    width: 80%;\r\n    height: 2.5em;\r\n    font-size: 1.2rem;\r\n    border-radius: 1.2rem;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    border: 0.2rem solid lightgray;\r\n    outline: 0;\r\n    &:hover{\r\n      background-color: #e8e7e6;//#FEFCF3 , #F5EBE0\r\n    }\r\n`\r\n\r\nconst LoginForm1211 = ({ authLogic }) => {\r\n  // 로그인이 성공하면 localhost:3000/marker -> Route\r\n  // 리액트는 SPA다. (Single Page Application) 그래서 href를 쓰면 안된다. 사용하게 되면 URL이 변경된다. 사용할 거면 useNaigate()를 사용한다.\r\n  const navigate = useNavigate()\r\n\r\n  const [userId, setUserId] = useState()\r\n  // 로그인 성공시 구글이 나에게 콜백함수 resolve를 통해서 user 정보를 쥐어준다. user.uid\r\n\r\n  const goToMaker = userId => {\r\n    navigate({\r\n      pathname: \"/marker\",\r\n      state: { id: userId },\r\n    })\r\n  }\r\n\r\n  const onLogin = async () => {\r\n    // authLogic에 있는 로그인 함수를 호출한다.\r\n    try {\r\n      const user = await loginGoogle(authLogic.auth, authLogic.googleProvider)\r\n      // 구글 인증 후 응답으로 받은 프로필 정보에서 user값을 꺼낸다.\r\n      // localStorage.setItem(\"userID\", user.uid)\r\n      setUserId(user.uid)\r\n      //window.localStorage.setItem(\"userId\", user.uid);\r\n\r\n      // user.uid가 존재하면(참이면 1, 안녕, 즉 내용이 있으면) - Marker불러줘\r\n      if (user.uid) {\r\n        goToMaker(user.uid)\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(\"로그인 오류입니다.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LoginDiv>\r\n      <Header1211 />\r\n      <Section>\r\n        <h1>Login</h1>\r\n        <ul>\r\n          <li>\r\n            <button className='btnLogin' onClick={onLogin}>Google</button>\r\n          </li>\r\n          <li>\r\n            <button className='btnLogin'>Github</button>\r\n          </li>\r\n        </ul>\r\n      </Section>\r\n      <Footer1211 />\r\n    </LoginDiv >\r\n  )\r\n}\r\n\r\nexport default LoginForm1211"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}