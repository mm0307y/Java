{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java\\\\workspace_react\\\\cloudinary-step2\\\\src\\\\components1210\\\\page1210\\\\Marker1210.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Header1211 from \"../include1211/Header1211\";\nimport Footer1211 from \"../include1211/Footer1211\";\nimport { logout, onAuthChange } from \"../../service1212/authLogic1212\";\nimport { useNavigate } from \"react-router\";\nimport CardEditor1210 from \"./CardEditor1210\";\nimport Preview1210 from \"./Preview1210\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkerDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 80rem;\n  display: flex;\n  flex-direction: column;\n  background-color: makerWhite;\n`;\n_c = MarkerDiv;\nconst ContainerDiv = styled.div`\n  display: flex;\n  flex: 1; /* 중간에 여백을 가득채우도록 1을 준다. */\n  min-height: 0;\n`;\n_c2 = ContainerDiv;\nconst Marker1210 = ({\n  authLogic,\n  FileInput\n}) => {\n  _s();\n  // 일반 변수와 다른 점은 상태값이 변하면 화면이 재 렌더링이 된다.\n  const [cards, setCards] = useState({\n    '1': {\n      id: \"1\",\n      fileName: \"집에 가고 싶어요!!!!!!!!!\",\n      fileURL: \"https://res.cloudinary.com/dabcqtmbm/image/upload/v1707156245/lmbxljzqmcylnyngwafk.jpg\"\n    },\n    2: {\n      id: \"2\",\n      theme: \"light\",\n      fileName: \"kim\",\n      fileURL: null\n    }\n  });\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    console.log(\"effect\");\n    const loginCheck = async () => {\n      const user = await onAuthChange(authLogic.auth);\n      if (user) {\n        setUserId(user.uid);\n      } else {\n        navigate(\"/\");\n      }\n    }; //end of loginCheck\n\n    loginCheck();\n  }); //일부러 의존배열은 적지 않았다. 모든 변화에 상태를 추적해야 하니까\n\n  const onLogout = async () => {\n    console.log(\"onLogout\");\n    await logout(authLogic.auth);\n    navigate(\"/\");\n  };\n  const createOrUpdateCard = card => {\n    console.log(card); // 단위테스트: 전달받은 것 호출해 보기\n    // 이전에 상태값을 받아서 새로운 값을 하는 이런 콜백함수로도 이용이 가능합니다\n    // 새로 업데이트 되는 card를 변경해 주고 리턴은 업데이트된 아이를 리턴해줘야겠죠\n\n    setCards(cards => {\n      console.log(cards); //추가되기 전 cards정보\n      const updated = {\n        ...cards\n      };\n      console.log(updated);\n      // 어차피 여기서 id가 오브젝트에 없었다면 새로운 것이 추가가 되어져요\n      // 그래서 addCard는 필요가 없어요\n      updated[card.id] = card;\n      return updated;\n    });\n  };\n  const deleteCard = card => {\n    console.log(card); // 단위테스트: 전달받은 것 호출해 보기\n    setCards(cards => {\n      const updated = {\n        ...cards\n      };\n      delete updated[card.id];\n      return updated;\n    });\n    console.log(`삭제 카드 card.id ${card.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(MarkerDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Header1211, {\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerDiv, {\n      children: [/*#__PURE__*/_jsxDEV(CardEditor1210, {\n        FileInput: FileInput,\n        cards: cards,\n        addCard: createOrUpdateCard,\n        updateCard: createOrUpdateCard,\n        deleteCard: deleteCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview1210, {\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer1211, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Marker1210, \"F0jLCPPg53TYAEyCBIZBRNGD7X8=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Marker1210;\nexport default Marker1210;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MarkerDiv\");\n$RefreshReg$(_c2, \"ContainerDiv\");\n$RefreshReg$(_c3, \"Marker1210\");","map":{"version":3,"names":["React","useState","styled","Header1211","Footer1211","logout","onAuthChange","useNavigate","CardEditor1210","Preview1210","jsxDEV","_jsxDEV","MarkerDiv","div","_c","ContainerDiv","_c2","Marker1210","authLogic","FileInput","_s","cards","setCards","id","fileName","fileURL","theme","navigate","userId","setUserId","useEffect","console","log","loginCheck","user","auth","uid","onLogout","createOrUpdateCard","card","updated","deleteCard","children","_jsxFileName","lineNumber","columnNumber","addCard","updateCard","_c3","$RefreshReg$"],"sources":["D:/Java/workspace_react/cloudinary-step2/src/components1210/page1210/Marker1210.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header1211 from \"../include1211/Header1211\";\r\nimport Footer1211 from \"../include1211/Footer1211\";\r\nimport { logout, onAuthChange } from \"../../service1212/authLogic1212\";\r\nimport { useNavigate } from \"react-router\";\r\nimport CardEditor1210 from \"./CardEditor1210\";\r\nimport Preview1210 from \"./Preview1210\";\r\n\r\nconst MarkerDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 80rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: makerWhite;\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: flex;\r\n  flex: 1; /* 중간에 여백을 가득채우도록 1을 준다. */\r\n  min-height: 0;\r\n`;\r\n\r\nconst Marker1210 = ({ authLogic, FileInput }) => {\r\n  // 일반 변수와 다른 점은 상태값이 변하면 화면이 재 렌더링이 된다.\r\n  const [cards, setCards] = useState({\r\n    '1': {\r\n      id: \"1\",\r\n      fileName: \"집에 가고 싶어요!!!!!!!!!\",\r\n      fileURL:\r\n        \"https://res.cloudinary.com/dabcqtmbm/image/upload/v1707156245/lmbxljzqmcylnyngwafk.jpg\",\r\n    },\r\n    2: {\r\n      id: \"2\",\r\n      theme: \"light\",\r\n      fileName: \"kim\",\r\n      fileURL: null,\r\n    },\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [userId, setUserId] = useState();\r\n  useEffect(() => {\r\n    console.log(\"effect\");\r\n    const loginCheck = async () => {\r\n      const user = await onAuthChange(authLogic.auth);\r\n      if (user) {\r\n        setUserId(user.uid);\r\n      } else {\r\n        navigate(\"/\");\r\n      }\r\n    }; //end of loginCheck\r\n\r\n    loginCheck();\r\n  }); //일부러 의존배열은 적지 않았다. 모든 변화에 상태를 추적해야 하니까\r\n\r\n  const onLogout = async () => {\r\n    console.log(\"onLogout\");\r\n    await logout(authLogic.auth);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const createOrUpdateCard = (card) => {\r\n    console.log(card); // 단위테스트: 전달받은 것 호출해 보기\r\n    // 이전에 상태값을 받아서 새로운 값을 하는 이런 콜백함수로도 이용이 가능합니다\r\n    // 새로 업데이트 되는 card를 변경해 주고 리턴은 업데이트된 아이를 리턴해줘야겠죠\r\n\r\n    setCards((cards) => {\r\n      console.log(cards); //추가되기 전 cards정보\r\n      const updated = { ...cards };\r\n      console.log(updated);\r\n      // 어차피 여기서 id가 오브젝트에 없었다면 새로운 것이 추가가 되어져요\r\n      // 그래서 addCard는 필요가 없어요\r\n      updated[card.id] = card;\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const deleteCard = (card) => {\r\n    console.log(card); // 단위테스트: 전달받은 것 호출해 보기\r\n    setCards((cards) => {\r\n      const updated = { ...cards };\r\n      delete updated[card.id];\r\n      return updated;\r\n    });\r\n    console.log(`삭제 카드 card.id ${card.id}`);\r\n  };\r\n\r\n  return (\r\n    <MarkerDiv>\r\n      <Header1211 onLogout={onLogout} />\r\n      <ContainerDiv>\r\n        <CardEditor1210\r\n          FileInput={FileInput}\r\n          cards={cards}\r\n          addCard={createOrUpdateCard}\r\n          updateCard={createOrUpdateCard}\r\n          deleteCard={deleteCard}\r\n        />\r\n        <Preview1210 cards={cards} />\r\n      </ContainerDiv>\r\n      <Footer1211 />\r\n    </MarkerDiv>\r\n  );\r\n};\r\n\r\nexport default Marker1210;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}